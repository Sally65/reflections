How did viewing a diff between two versions of a file help you see the bug that was introduced?
	It was great! It only showed the lines with differenced, instead of showing all of the text.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
	As you learn more, you can constantly update your programs.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?
	Pros: Each commit is important, you don't have to scroll through tons of unimportant saves, looking for something helpful.
	Cons: If you forget to save, you're screwed!

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
	I would think because they are primarily used for different things. Git is for programers, who use multiple files simultaneously. 

How can you use the commands git log and git diff to view the history of files?
	You use git log to see the commit history, and git diff to see the differences between two commits.

How might using version control make you more confident to make changes that could break something?
	Because if you do break something, you can go back to a previous, unbroken version.

Now that you have your workspace set up, what do you want to try using Git for?
	Keeping up with commits for anything I code.
	